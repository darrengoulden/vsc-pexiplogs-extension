{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Pexip Logs",
	"patterns": [
		{
			"include": "#dbsummary"
		},
		{
			"include": "#mjxsummary"
		},
		{
			"include": "#logreader"
		},
		{
			"include": "#generic"
		},
		{
			"include": "#administrator"
		},
		{
			"include": "#support"
		},
		{
			"include": "#syslog"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"dbsummary": {
			"patterns": [
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.platformversion",
					"match": "^Platform\\sVersion:\\s(\\d{1,2}(\\.\\d{1})?(\\.\\d{1}\\.\\d{1})?\\s\(\\d{5}\\.\\d\\.\\d\\)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.platformversion"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.locations",
					"match": "^Locations:\\s(\\d{1,4}$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.locations"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.workernodes",
					"match": "^Conferencing\\sNodes(\\s)?:\\s(\\d{1,4}$)",
					"captures": {
						"2": {
							"name": "string.pexip.dbsummary.workernodes"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.managementnode",
					"match": "^Management\\sNode:\\s((.*?)\\s\\(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.managementnode"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.thisnode",
					"match": "^This\\sNode:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.thisnode"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.managementnode.resource",
					"match": "^CPU:\\s((.*?)RAM$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.managementnode.resource"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.syslog",
					"match": "^Syslog\\sservers:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.syslog"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.signalling.ports",
					"match": "^Signalling\\sports:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.signalling.ports"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.media.ports",
					"match": "^Media\\sports:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.media.ports"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.mssip.domain",
					"match": "^MSSIP\\sDomain:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.mssip.domain"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.max.resolution",
					"match": "^Global\\sMax\\sResolution:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.max.resolution"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.vbss",
					"match": "^VBSS:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.vbss"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.codecs.false",
					"match": "^Disabled\\scodecs:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.codecs.false"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.codecs.true",
					"match": "^Enabled\\scodecs:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.codecs.true"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.dns.or.ntp",
					"match": "^(DNS|NTP)\\:\\s((.*?)$)",
					"captures": {
						"2": {
							"name": "string.pexip.dbsummary.managementnode.dns.or.ntp"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.overflow",
					"match": "^Overflow:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.overflow"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.transcoding",
					"match": "^Transcoding\\sLocation:\\s((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.dbsummary.transcoding"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.call.control.servers",
					"match": "^(SIP\\sProxy|H323\\sGatekeeper|Policy\\sProfile|Event\\sSinks|MSSIP\\sProxy|TURN\\sServer|Client\\sSTUN\\sServers|STUN\\sServer)(\\s+)?\\:(.*?)$",
					"captures": {
						"3": {
							"name": "string.pexip.dbsummary.call.control.servers"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.dbsummary.qos",
					"match": "^QoS:\\s(\\d{1,2})\\s\\(.*\\)\\,\\s(\\d{1,2})\\s\\(.*\\)$",
					"captures": {
						"3": {
							"name": "string.pexip.dbsummary.qos"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.logs.dbsummary.licenses",
					"match": "^Node\\sIssues|Other\\sIssues|Alarms\\s\\(excluding\\sconnectivity\\)|Gateway\\sRules|Licenses$"
				}
			]
		},
		"mjxsummary": {
			"patterns": [
				{
					"name": "entity.other.attribute-name.pexip.mjxsummary.profileid",
					"match": "^Profile\\s(\\#\\d{1,3})\\:((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.mjxsummary.profileid"
						},
						"2": {
							"name": "string.pexip.mjxsummary.profileid"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.mjxsummary.endpoint.groupid",
					"match": "^Endpoint\\sGroup\\s(\\#\\d{1,3})\\:((.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.mjxsummary.groupid"
						},
						"2": {
							"name": "string.pexip.mjxsummary.endpoint.groupid"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.mjxsummary.exchange.google.or.none",
					"match": "^Exchange\\sIntegration:|G\\sSuite\\sIntegration:|Mail\\sIntegration:(.*?)$",
					"captures": {
						"1": {
							"name": "string.pexip.mjxsummary.exchange.google.or.none"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.mjxsummary.rules",
					"match": "^(Rule\\s)(\\#\\d{1,3})\\s\\((Priority\\s)(\\#\\d{1,3})\\)$",
					"captures": {
						"1": {
							"name": "entity.other.attribute-name.pexip.mjxsummary.rules"
						},
						"2": {
							"name": "string.regexp.pexip.mjxsummary.rules"
						},
						"3": {
							"name": "entity.other.attribute-name.pexip.mjxsummary.rules"
						},
						"4": {
							"name": "string.regexp.pexip.mjxsummary.rules"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.logs.mjxsummary.headings",
					"match": "^OTJ\\sEndpoint\\sStatus|OTJ\\sMeetings|Meeting\\sProcessing\\sRules\\s\\(Sorted\\sby\\spriority\\)|Potential\\sConfiguration\\sIssues|Active\\salarms\\s\\(MJX\\)$"
				}
			]
		},
		"logreader": {
			"patterns": [
				{
					"name": "string.pexip.logreader.header.callid",
					"match": "^Call-ID:(.*?)$",
					"captures": {
						"1": {
							"name": "keyword.control.pexip.logreader.header.callid"
						}
					}
				},
				{
					"name": "string.pexip.logreader.header.participantid",
					"match": "^Participant-ID:(.*?)$",
					"captures": {
						"1": {
							"name": "keyword.control.pexip.logreader.header.participantid"
						}
					}
				},
				{
					"name": "constant.other.pexip.logreader.header.service",
					"match": "^(Service:)\\s(.*?)\\s(\/\\sProtocol:).*?$",
					"captures": {
						"1": {
							"name": "string.pexip.logreader.header.service"
						},
						"2": {
							"name": "constant.other.pexip.logreader.header.service"
						},
						"3": {
							"name": "string.pexip.logreader.header.service"
						}
					}
				},
				{
					"name": "constant.other.pexip.logreader.header.from-to",
					"match": "^(From:)\\s(.*?)\\s(\/\\sTo:)\\s(.*?)($|\\s(\/\\sDirection:)(.*?)$)",
					"captures": {
						"1": {
							"name": "string.pexip.logreader.header.from-to"
						},
						"3": {
							"name": "string.pexip.logreader.header.from-to"
						},
						"6": {
							"name": "string.pexip.logreader.header.from-to"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.logreader.call.timings",
					"match": "^Start:\\s(\\d{4}-\\d{2}-\\d{2}\\s\\d{2}\\:\\d{2}\\:\\d{2},\\d{3})\\s\/\\sEnd:\\s(\\d{4}-\\d{2}-\\d{2}\\s\\d{2}\\:\\d{2}\\:\\d{2},\\d{3})($|\\s\/\\sDuration:\\s(\\d{1,2}\\:\\d{1,2}\\:\\d{1,2}\\.\\d{1,6})$)",
					"captures": {
						"1": {
							"name": "keyword.operator.pexip.logreader.call.timings"
						},
						"2": {
							"name": "keyword.operator.pexip.logreader.call.timings"
						},
						"4": {
							"name": "keyword.operator.pexip.logreader.call.timings"
						}
					}
				},
				{
					"name": "entity.other.attribute-name.pexip.logreader.header.nodes",
					"match": "^Signalling-Node:\\s(.*?)\\s\/\\sMedia-Node:\\s(.*?)($|\\s\/(\\sProxy-Node:\\s)?(.*?$)?$)",
					"captures": {
						"1": {
							"name": "keyword.operator.pexip.logreader.header.nodes"
						},
						"2": {
							"name": "keyword.operator.pexip.logreader.header.nodes"
						},
						"5": {
							"name": "keyword.operator.pexip.logreader.header.nodes"
						}
					}
				},
				{
					"name": "string.pexip.logreader.header.remote.vendor",
					"match": "^Remote\\sVendor:"
				},
				{
					"name": "entity.other.attribute-name.pexip.logreader.header.disconnect.reason",
					"match": "^Disconnect Reason: (.*?)$",
					"captures": {
						"1": {
							"name": "constant.numeric.pexip.logreader.header.disconnect.reason"
						}
					}
				},
				{
					"name": "entity.name.tag.pexip.logreader.timestamp",
					"match": "^\\d{4}-\\d{2}-\\d{2}\\s(\\d{2}:\\d{2}:\\d{2},\\d{3})",
					"captures": {
						"1": {
							"name": "string.pexip.logreader.timestamp"
						}
					}
				},
				{
					"name": "support.function.pexip.logreader.stable.call.quality",
					"begin": "Stable\\scall\\squality\\schanged:\\sWas",
					"end": "$",
					"patterns": [
						{
							"begin": "(1_good)",
							"beginCaptures": {
								"1": {
									"name": "entity.name.type.pexip.logreader.quality.good"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(2_ok)",
							"beginCaptures": {
								"1": {
									"name": "comment.line.pexip.logreader.quality.ok"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(3_bad)",
							"beginCaptures": {
								"1": {
									"name": "string.regexp.pexip.logreader.quality.bad"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(4_terrible)",
							"beginCaptures": {
								"1": {
									"name": "invalid.illegal.pexip.logreader.quality.terrible"
								}
							},
							"end": "\\s|$"
						}
					]
				},
				{
					"name": "keyword.operator.pexip.logreader.new.mode.activated",
					"match": "(\\*\\*)(\\sNew\\smode\\sactivated\\:\\sStream\\s)(\\d{1,2})\\s\\((.+?)\\)\\,\\s(\\[)?(.+?)\\s(\\((\\d{1,3})\\))?.*(pt\\:\\d{1,3})",
					"captures": {
						"2": {
							"name": "string.pexip.logreader.new.mode.activated"
						},
						"3": {
							"name": "entity.name.type.pexip.logreader.new.mode.activated"
						},
						"4": {
							"name": "entity.name.type.pexip.logreader.new.mode.activated"
						},
						"6": {
							"name": "entity.name.type.pexip.logreader.new.mode.activated"
						},
						"9": {
							"name": "entity.name.type.pexip.logreader.new.mode.activated"
						}
					}
				},
				{
					"name": "keyword.operator.pexip.logreader.ice.pair.selected",
					"match": "\\*\\*\\s(ICE\\snew-selected-pair\\sevent:\\sStream)\\s(\\d{1,2})\\s(\\()(.*?)(\\))\\,\\sComponent\\s(.+?)$",
					"captures": {
						"1": {
							"name": "string.pexip.logreader.ice.pair.selected"
						},
						"2": {
							"name": "entity.name.type.pexip.logreader.ice.pair.selected"
						},
						"4": {
							"name": "entity.name.type.pexip.logreader.ice.pair.selected"
						},
						"6": {
							"name": "entity.name.type.pexip.logreader.ice.pair.selected"
						}
					}
				},
				{
					"name": "keyword.operator.pexip.logreader.latching",
					"match": "\\*\\*\\s(Setting\\sremote\\scandidates\\sdue\\sto\\slatching:\\sStream\\s)(\\d{1,3})\\s\\((.*?)\\)\\,\\sComponent\\s(.*?)\\,\\s.*$",
					"captures": {
						"1": {
							"name": "entity.name.function.pexip.logreader.latching"
						},
						"2": {
							"name": "entity.name.type.pexip.logreader.latching"
						},
						"3": {
							"name": "entity.name.type.pexip.logreader.latching"
						},
						"4": {
							"name": "entity.name.type.pexip.logreader.latching"
						}
					}
				},
				{
					"name": "string.regexp.pexip.logreader.connection.lost",
					"match": "\\*\\*\\s(TCP|TLS)\\sConnection\\sLost:\\s(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\:\\d{1,5})\\s<->\\s(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\:\\d{1,5})$",
					"captures": {
						"2": {
							"name": "constant.numeric.pexip.logreader.connection.lost"
						},
						"3": {
							"name": "constant.numeric.pexip.logreader.connection.lost"
						}
					}
				},
				{
					"name": "string.regexp.pexip.logreader.transport.failure",
					"match": "\\*\\*\\s(SIP Transport Failure towards)\\s(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\:\\d{1,5})\\s\\[(TCP|TLS)\\]($|\\s(\\()(.*?)(\\)$))",
					"captures": {
						"2": {
							"name": "constant.numeric.pexip.logreader.transport.failure"
						},
						"3": {
							"name": "constant.numeric.pexip.logreader.transport.failure"
						},
						"6": {
							"name": "constant.numeric.pexip.logreader.transport.failure"
						}
					}
				},
				{
					"name": "constant.language.pexip.logreader.teams.roster",
					"match": "ROSTER\\s\\((.*?)\\)$",
					"captures": {
						"1": {
							"name": "constant.numeric.pexip.logreader.teams.roster"
						}
					}
				},
				{
					"name": "keyword.operator.pexip.logreader.resume.stream",
					"match": "\\*\\*\\s(Resumed\\sreceiving\\sincoming\\s(audio|video|presentation))\\s(\\()((Stream)\\s(\\d{1,2}))(\\)$)",
					"captures": {
						"1": {
							"name": "comment.line.pexip.logreader.resume.stream"
						},
						"3": {
							"name": "keyword.operator.pexip.logreader.resume.stream"
						},
						"5": {
							"name": "comment.line.pexip.logreader.resume.stream"
						},
						"6": {
							"name": "entity.name.type.pexip.logreader.resume.stream"
						},
						"7": {
							"name": "keyword.operator.pexip.logreader.resume.stream"
						}
					}
				},
				{
					"name": "keyword.operator.pexip.logreader.lost.stream",
					"match": "\\*\\*\\s(Lost\\sincoming\\s(audio|video|presentation):\\sStream)\\s(\\d{1,2})$",
					"captures": {
						"1": {
							"name": "string.regexp.pexip.logreader.lost.stream"
						},
						"2": {
							"name": "string.regexp.pexip.logreader.lost.stream"
						},
						"3": {
							"name": "entity.name.type.pexip.logreader.lost.stream"
						}
					}
				},
				{
					"name": "keyword.operator.pexip.logreader.stats.reset",
					"match": "\\*\\*\\s(Statistics\\sabout\\sto\\sreset)$",
					"captures": {
						"1": {
							"name": "string.pexip.logreader.lost.stream"
						}
					}
				},
				{
					"name": "entity.name.tag.pexip.logreader.m-lines",
					"begin": "(\\s(m|b)\\=)",
					"end": "$",
					"beginCaptures": {
						"2": {
							"name": "entity.name.tag.pexip.logreader.m-lines"
						}
					},
					"patterns": [
						{
							"begin": "(AS)\\:(\\d{1,5})",
							"beginCaptures": {
								"1": {
									"name": "entity.name.tag.pexip.logreader.m-lines"
								},
								"2": {
									"name": "entity.other.inherited-class.pexip.logreader.m-lines"
								}
							},
							"end": "\\;|\\s"
						},
						{
							"begin": "(audio)\\s(\\d{1,5})(\\s(\\()(.*?)(\\)))?",
							"beginCaptures": {
								"1": {
									"name": "entity.name.tag.pexip.logreader.m-lines"
								},
								"2": {
									"name": "entity.other.inherited-class.pexip.logreader.m-lines"
								},
								"4": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								},
								"5": {
									"name": "entity.other.inherited-class.pexip.logreader.m-lines"
								},
								"6": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								}
							},
							"end": "\\;|\\s"
						},
						{
							"begin": "(video)\\s(\\d{1,5})(\\s(\\()(.*?)(\\)))?",
							"beginCaptures": {
								"1": {
									"name": "entity.name.tag.pexip.logreader.m-lines"
								},
								"2": {
									"name": "entity.other.inherited-class.pexip.logreader.m-lines"
								},
								"4": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								},
								"5": {
									"name": "entity.other.inherited-class.pexip.logreader.m-lines"
								},
								"6": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								}
							},
							"end": "\\;|\\s"
						},
						{
							"begin": "(application)\\s(\\d{1,5})(\\s(\\()(.*?)(\\))|(\\s\\[|$|\\;))",
							"beginCaptures": {
								"1": {
									"name": "entity.name.tag.pexip.logreader.m-lines"
								},
								"2": {
									"name": "entity.other.inherited-class.pexip.logreader.m-lines"
								},
								"4": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								},
								"5": {
									"name": "entity.other.inherited-class.pexip.logreader.m-lines"
								},
								"6": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								}
							},
							"end": "\\;|\\s"
						},
						{
							"begin": "(\\[Crypto\\:\\s)(True)(\\])",
							"beginCaptures": {
								"1": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								},
								"2": {
									"name": "entity.other.inherited-class.pexip.logreader.m-lines"
								},
								"3": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								}
							},
							"end": "\\;|\\s"
						},
						{
							"begin": "(\\[Crypto\\:\\s)(False)(\\])",
							"beginCaptures": {
								"1": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								},
								"2": {
									"name": "string.regexp.pexip.logreader.m-lines"
								},
								"3": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								}
							},
							"end": "\\;|\\s"
						},
						{
							"begin": "(\\[)(recvonly|sendonly)(\\])",
							"beginCaptures": {
								"1": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								},
								"2": {
									"name": "entity.other.inherited-class.pexip.logreader.m-lines"
								},
								"3": {
									"name": "keyword.operator.pexip.logreader.m-lines"
								}
							},
							"end": "\\;|\\s"
						}
					]
				},
				{
					"name": "string.regexp.pexip.logreader.forbidden",
					"match": "403\\sForbidden"
				},
				{
					"name": "string.regexp.pexip.logreader.service.not.found",
					"match": "404\\sNeither\\sconference\\snor\\sgateway\\sfound"
				},
				{
					"name": "string.regexp.pexip.logreader.too.many.attempts",
					"match": "404\\sToo\\smany\\sattempts\\sto\\sjoin\\snon-existent\\saliases"
				},
				{
					"name": "string.regexp.pexip.logreader.attempt.rejected",
					"match": "404\\sSuspicious\\sjoin\\sattempt\\srejected"
				},
				{
					"name": "string.regexp.pexip.logreader.call.rejected",
					"match": "480\\sCall\\srejected"
				},
				{
					"name": "string.regexp.pexip.logreader.call.not.exist",
					"match": "481\\sCall/Transaction\\sDoes\\sNot\\sExist"
				},
				{
					"name": "string.regexp.pexip.logreader.loop.detected",
					"match": "482\\sLoop\\sDetected"
				},
				{
					"name": "string.regexp.pexip.logreader.request.pending",
					"match": "491\\sRequest\\sPending"
				}
			]
		},
		"generic": {
			"patterns": [
				{
					"name": "entity.name.tag.pexip.logs.timestamp.and.node",
					"match": "^\\d{4}-\\d{2}-\\d{2}T(.+?)\\+.+?\\s(.+?)\\s",
					"captures": {
						"1": {
							"name": "string.pexip.logs.timestamp.and.node"
						},
						"2": {
							"name": "string.pexip.logs.timestamp.and.node"
						}
					}
				},
				{
					"name": "entity.name.tag.pexip.logs.timestamp.and.node",
					"match": "^\\d{4}-\\d{2}-\\d{2}\\s(\\d{2}:\\d{2}:\\d{2}\\.\\d{4})Z\\s",
					"captures": {
						"1": {
							"name": "string.pexip.logs.timestamp.and.node"
						},
						"2": {
							"name": "string.pexip.logs.timestamp.and.node"
						}
					}
				},
				{
					"name": "string.regexp.pexip.logs.error",
					"match": "Level=\"WARNING\""
				},
				{
					"name": "invalid.illegal.pexip.logs.error",
					"match": "Level=\"(CRITICAL|ERROR)\""
				}
			]
		},
		"administrator": {
			"patterns": [
				{
					"name": "constant.other.pexip.administrator.conference",
					"begin": "administrator\\.conference",
					"end": "$",
					"patterns": [
						{
							"begin": "(Message=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "entity.name.tag.pexip.administrator.conference.message"
								},
								"2": {
									"name": "string.pexip.administrator.conference.message"
								},
								"3": {
									"name": "entity.name.tag.pexip.administrator.conference.message"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(Call-id=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "variable.parameter.regexp.pexip.administrator.conference.call-id"
								},
								"2": {
									"name": "support.function.regexp.pexip.administrator.conference.call-id"
								},
								"3": {
									"name": "variable.parameter.pexip.administrator.conference.call-id"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(Detail=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "keyword.control.pexip.administrator.conference.call-id"
								},
								"2": {
									"name": "entity.name.type.pexip.administrator.conference.call-id"
								},
								"3": {
									"name": "keyword.control.pexip.administrator.conference.call-id"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(Reason=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "entity.name.type.pexip.administrator.conference.call-id"
								},
								"2": {
									"name": "keyword.control.pexip.administrator.conference.call-id"
								},
								"3": {
									"name": "entity.name.type.pexip.administrator.conference.call-id"
								}
							},
							"end": "\\s|$"
						}
					]
				},
				{
					"name": "constant.other.pexip.administrator.system.connectivity",
					"begin": "administrator\\.system\\.connectivity",
					"end": "$",
					"patterns": [
						{
							"begin": "(Message=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "entity.name.tag.pexip.administrator.system.connectivity.message"
								},
								"2": {
									"name": "string.pexip.administrator.system.connectivity.message"
								},
								"3": {
									"name": "entity.name.tag.pexip.administrator.system.connectivity.message"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(Path=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "variable.parameter.regexp.pexip.administrator.system.connectivity.path"
								},
								"2": {
									"name": "support.function.regexp.pexip.administrator.system.connectivity.path"
								},
								"3": {
									"name": "variable.parameter.pexip.administrator.system.connectivity.path"
								}
							},
							"end": "\\s|$"
						}
					]
				}
			]
		},
		"support": {
			"patterns": [
				{
					"name": "constant.other.pexip.support.pulse",
					"begin": "support\\.pulse",
					"end": "$",
					"patterns": [
						{
							"begin": "(Message=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "entity.name.tag.pexip.support.pulse"
								},
								"2": {
									"name": "string.pexip.support.pulse"
								},
								"3": {
									"name": "entity.name.tag.pexip.support.pulse"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(Duration=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "variable.parameter.regexp.pexip.support.pulse"
								},
								"2": {
									"name": "support.function.regexp.pexip.support.pulse"
								},
								"3": {
									"name": "variable.parameter.pexip.support.pulse"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(Last-frozen=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "keyword.control.pexip.support.pulse"
								},
								"2": {
									"name": "entity.name.type.pexip.support.pulse"
								},
								"3": {
									"name": "keyword.control.pexip.support.pulse"
								}
							},
							"end": "\\s|$"
						}
					]
				},
				{
					"name": "constant.other.pexip.support.sip",
					"begin": "support\\.sip",
					"end": "$",
					"patterns": [
						{
							"begin": "(Message=\")(.*?)(\")",
							"beginCaptures": {
								"1": {
									"name": "entity.name.tag.pexip.support.sip"
								},
								"2": {
									"name": "string.pexip.support.sip"
								},
								"3": {
									"name": "entity.name.tag.pexip.support.sip"
								}
							},
							"end": "\\s|$"
						},
						{
							"begin": "(m=\\w+)\\s(\\d+)(\\s|\\;)",
							"beginCaptures": {
								"1": {
									"name": "entity.name.tag.pexip.support.sip"
								},
								"2": {
									"name": "entity.other.inherited-class..pexip.support.sip"
								}
							},
							"end": "\\s|$"
						}
					]
				}
			]
		},
		"syslog": {
			"patterns": [
				{
					"name": "constant.other.pexip.puppet-agent",
					"begin": "puppet-agent",
					"end": "$",
					"patterns": [
						{
							"begin": "(Could\\snot\\srequest\\scertificate\\:\\sThe\\scertificate\\sretrieved\\sfrom\\sthe master\\sdoes\\snot\\smatch\\sthe\\sagent\\'s\\sprivate\\skey.)",
							"beginCaptures": {
								"1": {
									"name": "string.regexp.pexip.puppet-agent"
								}
							},
							"end": "\\s|$"
						}
					]
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "entity.name.tag.pexip.logs.regular.m-lines",
					"match": "m=\\w+\\s(\\d+)(\\s|\\;)",
					"captures": {
						"1": {
							"name": "entity.other.inherited-class.pexip.logs.regular.m-lines"
						}
					}
				},
				{
					"name": "string.pexip.logs.call-id.user-agent",
					"match": "(?i)(Call-ID:|User-Agent:|Remote Vendor:)\\s(?:[\\d\\,\/\\(\\)\\.\\;\\:]*[a-zA-Z]*[a-zA-Z\\d\\,\/\\(\\)\\.\\s\\-\\_\\;\\:@]*)",
					"captures": {
						"1": {
							"name": "keyword.control.pexip.logs.callid.user.agent"
						}
					}
				},
				{
					"name": "string.pexip.logs.call-id.uuid",
					"match": "\\'(call_uuid)\\'\\:\\s\\'(.*?)\\'",
					"captures": {
						"1": {
							"name": "keyword.control.pexip.logs.callid.uuid"
						},
						"2": {
							"name": "keyword.control.pexip.logs.callid.uuid"
						}
					}
				},
				{
					"name": "keyword.control.pexip.logs.cseq.invite",
					"match": "(?i)CSeq:\\s(\\d+\\s)(INVITE)",
					"captures": {
						"1": {
							"name": "storage.type.pexip.logs.cseq.invite"
						},
						"2": {
							"name": "storage.type.pexip.logs.cseq.invite"
						}
					}
				},
				{
					"name": "keyword.control.pexip.logs.cseq.non-invite",
					"match": "(?i)CSeq:\\s(\\d+)(.+)",
					"captures": {
						"1": {
							"name": "storage.type.pexip.logs.cseq.non-invite"
						},
						"2": {
							"name": "storage.type.pexip.logs.cseq.non-invite"
						}
					}
				},
				{
					"name": "keyword.control.pexip.logs.h225.message.type",
					"match": "(h323_message_body: )(.+?):",
					"captures": {
						"1": {
							"name": "storage.type.pexip.logs.h225.message.type"
						}
					}
				},
				{
					"name": "keyword.control.pexip.logs.errors",
					"match": "(\\s)(ERROR|FATAL|WARN)(\\s)",
					"captures": {
						"2": {
							"name": "string.regexp.pexip.logs.errors"
						}
					}
				},
				{
					"name": "entity.name.type.pexip.logs.error.message",
					"match": "(Alarm|Error|ErrorMessage|Reason)=\"((?:[\\d,\/().]*[a-zA-Z][a-zA-Z\\d,\/().\\s\\-_'\\:\\s]*))\"",
					"captures": {
						"2": {
							"name": "keyword.control.pexip.logs.error.message"
						}
					}
				},
				{
					"name": "entity.name.type.pexip.logs.ice.pair.selected",
					"match": "Message=\"(ICE new-selected-pair event)\"",
					"captures": {
						"1": {
							"name": "string.quoted.single.logs.ice.pair.selected"
						}
					}
				},
				{
					"name": "entity.name.type.pexip.logs.node.unavailable",
					"match": "Message=\"(Conferencing node appears unavailable.)\"",
					"captures": {
						"1": {
							"name": "string.quoted.single.logs.node.unavailable"
						}
					}
				},
				{
					"name": "entity.name.type.pexip.logs.service.not.found",
					"match": "Message=\"(Alias didn't match any Conference or Gateway rule)\"",
					"captures": {
						"1": {
							"name": "string.quoted.single.pexip.logs.service.not.found"
						}
					}
				},
				{
					"name": "entity.name.tag.pexip.logs.messages",
					"match": "Message=\"(.*?)\"",
					"captures": {
						"1": {
							"name": "string.pexip.logs.messages"
						}
					}
				},
				{
					"name": "entity.name.type.pexip.logs.statuscodes",
					"match": "StatusCode=\"(.*?)\"",
					"captures": {
						"1": {
							"name": "keyword.control.pexip.logs.statuscodes"
						}
					}
				},
				{
					"name": "entity.name.type.pexip.logs.system.idle",
					"match": "Avg system idle:\\s(\\d\\.\\d{3})\\sInstant system idle:\\s(\\d\\.\\d{3})",
					"captures": {
						"1": {
							"name": "keyword.control.pexip.logs.system.idle"
						},
						"2": {
							"name": "keyword.control.pexip.logs.system.idle"
						}
					}
				},
				{
					"name": "entity.name.type.pexip.logs.irregular.ping",
					"match": "Irregular\\sping\\sdetected\\s\\((.+)\\ssec\\)\\sin\\smedia\\sprocess",
					"captures": {
						"1": {
							"name": "keyword.control.pexip.logs.system.idle"
						}
					}
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "keyword.control.pexip.logs.conference.start.stop",
					"match": "Conference has been (created|stopped)."
				},
				{
					"name": "string.pexip.logs.participant.join.disconnect",
					"match": "Participant has (joined|disconnected)."
				},
				{
					"name": "string.pexip.logs.participant.join.attempt",
					"match": "Participant attempting to join conference."
				},
				{
					"name": "string.pexip.logs.outbound.call.attempt",
					"match": "Placing outbound call"
				},
				{
					"name": "string.pexip.logs.outbound.call.request",
					"match": "Outgoing call requested"
				},
				{
					"name": "string.pexip.logs.policy.request",
					"match": "/policy/v1/.+/"
				},
				{
					"name": "invalid.illegal.pexip.logs.error",
					"match": "EventType=\"Warning\""
				},
				{
					"name": "invalid.illegal.pexip.logs.error",
					"match": "ErrorType=\"(\\w+)\""
				},
				{
					"name": "invalid.illegal.pexip.logs.error",
					"match": "ErrorCode=\"(\\w+)\""
				},
				{
					"name": "invalid.illegal.pexip.logs.error",
					"match": "Detail=\"Signalling node disconnected\""
				},
				{
					"name": "invalid.illegal.pexip.logs.error",
					"match": "Name record lookup failure"
				},
				{
					"name": "string.pexip.logs.stats.reset",
					"match": "\\*\\* Statistics about to reset"
				},
				{
					"name": "string.pexip.logs.service.not.found",
					"match": "404 Neither conference nor gateway found"
				},
				{
					"name": "string.pexip.logs.invite.ack.request",
					"match": "^[A-Z]+.+sip:.+SIP/2\\.0"
				},
				{
					"name": "string.pexip.logs.sip.responses",
					"match": "^(SIP/2\\.0|ACK\\ssip:).+"
				},
				{
					"name": "string.pexip.logs.standard.headers",
					"match": "(Record-Route|Via|From|To|Max-Forwards):"
				}
			]
		}
	},
	"scopeName": "source.pexip"
}